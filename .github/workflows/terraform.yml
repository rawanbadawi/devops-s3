name: "Terraform"
on:
  push:
    branches:
      - dev
      - stg
      - prd
  pull_request:
jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PRIVATE_TOKEN }} 
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.2
          # cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Get environment 
        id: environmentPR
        if: github.event_name == 'pull_request'
        env:
          ENVIORNMENT: ${{ github.event.pull_request.base.ref }}
      - name: Get environment 
        id: environment
        if: github.event_name != 'pull_request'
        env:
          ENVIORNMENT: ${{ github.ref_name }}
      - name: Check Environment
        id: check
        run: echo ${{ env.ENVIRONMENT }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init -backend-config=./environment/${{ env.ENVIRONMENT }}/backend.tf
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false -var-file='./environments/${{ env.ENVIRONMENT }}/terraform.tfvars'
        continue-on-error: true
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }} 

      - name: Update Pull Request
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: ${{  steps.plan.outputs.stdout }}
        with:
          github-token: ${{  secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`terraform\n
            ${process.env.PLAN}
            \`\`\`
            </details>
            *Pushed by: @${{  github.actor }}, Action: \`${{  github.event_name }}\`*`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if:  (${{ env.ENVIRONMENT }}== 'dev' || ${{ env.ENVIRONMENT }} == 'stg' || ${{ env.ENVIRONMENT }} == 'prd')  && ${{ env.ENVIRONMENT }} == 'push'
        run: terraform apply -auto-approve -input=false -var-file='./environments/${{ env.ENVIRONMENT }}/terraform.tfvars'
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}